[[language]]
  name = "javascript"
  shebangs = ["deno"]
  roots = ["deno.json", "deno.jsonc"]
  file-types = ["js"]
  language-servers = ["deno-lsp"]
  formatter = { command = 'biome', args = [
    "format",
    "--stdin-file-path",
    "buffer.js",
  ] }
  auto-format = true

[[language]]
  name = "typescript"
  shebangs = ["deno"]
  roots = ["deno.json", "deno.jsonc"]
  file-types = ["ts"]
  language-servers = ["deno-lsp"]
  formatter = { command = 'biome', args = [
    "format",
    "--stdin-file-path",
    "buffer.ts",
  ] }
  auto-format = true

[[language]]
  name = "jsx"
  shebangs = ["deno"]
  roots = ["deno.json", "deno.jsonc"]
  file-types = ["jsx"]
  language-servers = ["deno-lsp"]
  formatter = { command = 'biome', args = [
    "format",
    "--stdin-file-path",
    "buffer.jsx",
  ] }
  auto-format = true

  # [[language]]
  #   name = "tsx"
  #   shebangs = ["deno"]
  #   roots = ["deno.json", "deno.jsonc"]
  #   file-types = ["tsx"]
  #   language-servers = ["deno-lsp"]
  #   formatter = { command = 'biome', args = [
  #     "format",
  #     "--stdin-file-path",
  #     "buffer.tsx",
  #   ] }
  #   auto-format = true

[[language]]
  name             = "python"
  language-servers = ["pyright", "ruff"]
  auto-format      = true

[[language]]
  name        = "rust"
  auto-format = true

[[language]]
  name        = "toml"
  auto-format = true

[[language]]
  name        = "latex"
  auto-format = true
  indent      = { tab-width = 2, unit = " " }


[language-server.deno-lsp]
  command     = "deno"
  args        = ["lsp"]
  environment = { NO_COLOR = "1" }

  [language-server.deno-lsp.config.deno]
    enable = true
    # unstable = true
    cacheOnSave = true
    # Enable completion of importing from registries
    # Enable completion of function calls
    suggest = { completeFunctionCalls = false, imports = { hosts = { "https://deno.land" = true } } }
    # suggest = { imports = { hosts = { "https://deno.land" = true, "https://crux.land" = true, "https://x.nest.land" = true } } }

[language-server.texlab.config.texlab]
  diagnosticsDelay = 0

  [language-server.texlab.config.texlab.completion]
    matcher = 'prefix'

  [language-server.texlab.config.texlab.forwardSearch]
    executable = "/Applications/Skim.app/Contents/SharedSupport/displayline"
    args       = ["-g", "-z", "-r", "-n", "%l", "%p", "%f"]

  [language-server.texlab.config.texlab.build]
    onSave = true
    forwardSearchAfter = true
    auxDirectory = "build/artifacts"
    pdfDirectory = "build"
    args = [
      "-pdf",
      "-interaction=nonstopmode",
      "-synctex=1",
      "%f",
      "-auxdir=build/artifacts",
      "-outdir=build",
    ]

  [language-server.texlab.config.texlab.chktex]
    onOpenAndSave = true
    onEdit        = true

  [language-server.texlab.config.texlab.latexindent]
    modifyLineBreaks = true
    local            = "/Users/cooperrunyan/.config/latexindent.yaml"


[language-server.pyright.config.python.analysis]
  typeCheckingMode = "basic"

[language-server.ruff]
  command = "ruff"
  args    = ["server"]


[language-server.rust-analyzer.config]
  [language-server.rust-analyzer.config.check]
    command = "clippy"

  [language-server.rust-analyzer.config.cargo]
    features = "all"

[language-server.clangd.config]
  args         = ["-std=c++20"]
  enableConfig = true

[language-server.taplo.config]
  # Workaround for nonsense of being nonfunctional outside git directories
  # (https://github.com/helix-editor/helix/issues/3897#issuecomment-2361674437)
  root_dir = [".git", "*.toml"]
